swagger: "2.0"
info:
  description: "Customer Producer example"
  version: "1.0.0"
  title: "Customer Producer"
  contact:
    email: "snkbasuroy@gmail.com"
host: "localhost:12001"
basePath: "/v1/customers"
schemes:
- "https"
- "http"
paths: 
  /add_customer_data:
    post:
        tags:
        - "add_customer_data"
        summary: "Add a new customer"
        description: ""
        operationId: "addCustomer"
        consumes:
        - "application/json"
        produces:
        - "application/json"
        parameters:
        - name: "Authorization"
          in: "header"
          required: true
          type: "string"
          x-example: "Bearer x76765y66ug6=uyg_"
        - name: "activity-id"
          in: "header"
          required: true
          type: "string"
        - name: "transaction-id"
          in: "header"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Pet object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Customer"
        responses:
          "200":
            description: "successful operation"
            schema:
              $ref: "#/definitions/ApiResponse"
          "400":
            description: "Bad Request"
            schema:
              $ref: "#/definitions/ErrorResponse"
          "401":
            description: "Unauthorized"
            schema:
              $ref: "#/definitions/ErrorResponse"
          "408":
            description: "Request Timeout"
            schema:
              $ref: "#/definitions/ErrorResponse"
          "500":
            description: "Internal Server Error"
            schema:
              $ref: "#/definitions/ErrorResponse"
        security:
        - cust_auth:
          - "write:customers"
definitions:
  Customer:
    type: "object"
    required:
      - customerNumber
      - firstName
      - lastName
      - birthdate
      - country
      - countryCode
      - mobileNumber
      - email
      - customerStatus
      - address
    properties:
      customerNumber:
        type: "string"
        maxLength: 10
        example: "C000000001"
      firstName:
        type: "string"
        example: "Markus"
        minLength: 5
        maxLength: 50
      lastName:
        type: "string"
        example: "Taylor"
        minLength: 5
        maxLength: 50
      birthdate:
        type: "string"
        pattern: ^([0-2][0-9]|(3)[0-1]|(XX))(-)(((0)[0-9])|((1)[0-2])|(XX))(-)\d{4}$
        example: "26-11-2010"
        description: "Format should be DD-MM-YYYY"
      country: 
        type: "string"
        example: "USA"
      countryCode: 
        type: "string"
        example: "US"
        maxLength: 2
      mobileNumber:
        type: "string"
        example: "9083618912"
        maxLength: 10
      email:
        type: "string"
        maxLength: 50
        format: "email"
      customerStatus:
        type: "string"
        description: "Customer Status"
        enum:
        - "Restored"
        - "Suspended"
        - "Open"
        - "Closed"
      address:
        type: "object"
        required:
          - addressLine1
          - postalCode
        properties:
          addressLine1:
            type: "string"
            example: "3/1 XYZ avenue,"
            maxLength: 50
          addressLine2:
            type: "string"
            example: "Boston, USA"
          street:
            type: "string"
            example: "Storrow Dr road"
          postalCode:
            type: "string"
            example: "702215"
            minLength: 6
  ApiResponse:
    type: "object"
    required:
      - status
      - message
    properties:
      status:
        type: "string"
        description: "Status of request"
        enum:
          - "success"
      message:
        type: "string"
  ErrorResponse:
    type: "object"
    required:
      - status
      - message
    properties:
      status:
        type: "string"
        description: "Status of request"
        enum:
          - "error"
      message:
        type: "string"
      errorType:
        type: "string"
securityDefinitions:
  cust_auth:
    type: "oauth2"
    authorizationUrl: "https://localhost:12001/oauth/authorize"
    flow: "implicit"
    scopes:
      write:customers: "add customers to dataset"
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"